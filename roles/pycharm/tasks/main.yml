---
- name: enable repo
  lineinfile:
    path: /etc/yum.repos.d/_copr_phracek-PyCharm.repo
    regexp: ^enabled
    line: enabled=1
  become: yes

- name: install package
  dnf:
    name: pycharm-community
    state: present
  become: yes

- name: figure out package version
  shell:
    cmd: rpm -qa pycharm-community | sed 's/pycharm-community-\([0-9]\+.[0-9]\)\(.*\)$/\1/'
  register: pycharm_package_version
  changed_when: false

- name: set the pycharm config dir
  set_fact:
    pycharm_config_dir: "{{ pycharm_config_prefix }}{{ pycharm_package_version.stdout }}"

- name: create configuration dir
  file:
    path: "~/{{ pycharm_config_dir }}/{{ item }}"
    state: directory
    recurse: yes
  with_items:
    - config/settingsRepository/repository
    - config/options

- name: test for config repo git
  stat:
    path: "~/{{ pycharm_config_dir }}/config/settingsRepository/repository/.git"
  register: config_repo_git

# In order for this to take effect, on first pycharm run you gotta
# do an initial overrite local settings. Not sure why, but it got me what I wanted.
# Only load then on first-run. After we switch to SSH-based, we won't be able
# to clone until the keys are added to Github. An initial set is good enough
# until Pycharm can start doing the real work.
- name: load config repository
  git:
    repo: "{{ pycharm_config_repo }}"
    dest: "~/{{ pycharm_config_dir }}/config/settingsRepository/repository"
  when: config_repo_git.stat.exists == False

- name: find git remote method
  shell:
    cmd: git --no-pager config --local --get remote.origin.url
    chdir: "~/{{ pycharm_config_dir }}/config/settingsRepository/repository"
  register: config_remote
  changed_when: false

- name: switch config repo to ssh
  shell:
    cmd: "{{ user_bin_dir }}/git-switch-remote -p ssh -r ~/{{ pycharm_config_dir }}/config/settingsRepository/repository"
  when: "'git@' not in config_remote.stdout"
