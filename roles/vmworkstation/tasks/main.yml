---
- name: "facts | create"
  copy: dest=/etc/ansible/facts.d/vmworkstation.fact
        src=vmworkstation.fact
        mode=0755
  sudo: yes

- name: "ansible | reload"
  setup: filter=ansible_local

- name: "package | download"
  get_url: url={{ vmworkstation_repo }}/{{ vmworkstation_package }}
           dest=/tmp/{{ vmworkstation_package }}
           mode=0755
  when: ansible_local.vmworkstation.vmworkstation_present == false

- name: "stop httpd"
  service: name=httpd state=stopped
  sudo: yes

- name: "package | install"
  shell: bash /tmp/{{ vmworkstation_package }} --console --eulas-agreed --required
  sudo: yes
  when: ansible_local.vmworkstation.vmworkstation_present == false

- name: "fix | test"
  shell: grep -q VMWARE_USE_SHIPPED_LIBS /etc/vmware/bootstrap
  register: fix_result
  ignore_errors: yes
  changed_when: false

- name: "fix | install"
  copy: src=Update_VMW.sh dest=/usr/local/bin/Update_VMW.sh
        mode=0755
  sudo: yes
  when: fix_result|failed

- name: "fix | run"
  shell: Update_VMW.sh
  sudo: yes
  when: fix_result|failed

- name: "server | port | set"
  lineinfile:
    dest: /etc/vmware/hostd/proxy.xml
    regexp: "<httpsPort>"
    line: "<httpsPort>{{ vmworkstation_https_port }}</httpsPort>"
  sudo: yes
  notify: restart vmware-workstation-server
